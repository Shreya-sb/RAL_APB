$date
	Thu Jul 17 15:34:14 2025
$end
$version
	QuestaSim Version 10.6c
$end
$timescale
	1ns
$end

$scope module uvm_root $end
$upscope $end

$scope module tb $end
$var reg 8 ! prdata [7:0] $end
$var wire 1 " pwrite $end

$scope module DUT $end
$var wire 1 # clk $end
$var wire 1 $ rst $end
$var wire 1 " pwrite $end
$var wire 1 % paddr [4] $end
$var wire 1 & paddr [3] $end
$var wire 1 ' paddr [2] $end
$var wire 1 ( paddr [1] $end
$var wire 1 ) paddr [0] $end
$var wire 1 * pwdata [7] $end
$var wire 1 + pwdata [6] $end
$var wire 1 , pwdata [5] $end
$var wire 1 - pwdata [4] $end
$var wire 1 . pwdata [3] $end
$var wire 1 / pwdata [2] $end
$var wire 1 0 pwdata [1] $end
$var wire 1 1 pwdata [0] $end
$var reg 8 2 prdata [7:0] $end
$var reg 8 3 cntrl [7:0] $end
$var reg 8 4 reg1 [7:0] $end
$var reg 8 5 reg2 [7:0] $end
$var reg 8 6 reg3 [7:0] $end
$var reg 8 7 reg4 [7:0] $end
$upscope $end
$upscope $end

$scope begin uvm_pkg $end
$var parameter 32 8 UVM_HDL_MAX_WIDTH $end
$var parameter 32 9 UVM_STREAMBITS $end
$var parameter 32 : UVM_RADIX $end
$var parameter 32 ; UVM_MACRO_NUMFLAGS $end
$var parameter 32 < UVM_DEFAULT $end
$var parameter 32 = UVM_ALL_ON $end
$var parameter 32 > UVM_FLAGS_ON $end
$var parameter 32 ? UVM_FLAGS_OFF $end
$var parameter 32 @ UVM_COPY $end
$var parameter 32 A UVM_NOCOPY $end
$var parameter 32 B UVM_COMPARE $end
$var parameter 32 C UVM_NOCOMPARE $end
$var parameter 32 D UVM_PRINT $end
$var parameter 32 E UVM_NOPRINT $end
$var parameter 32 F UVM_RECORD $end
$var parameter 32 G UVM_NORECORD $end
$var parameter 32 H UVM_PACK $end
$var parameter 32 I UVM_NOPACK $end
$var parameter 32 J UVM_PHYSICAL $end
$var parameter 32 K UVM_ABSTRACT $end
$var parameter 32 L UVM_READONLY $end
$var parameter 32 M UVM_NODEFPRINT $end
$var parameter 32 N UVM_MACRO_EXTRAS $end
$var parameter 32 O UVM_FLAGS $end
$var parameter 32 P UVM_UNPACK $end
$var parameter 32 Q UVM_CHECK_FIELDS $end
$var parameter 32 R UVM_END_DATA_EXTRA $end
$var parameter 32 S UVM_START_FUNCS $end
$var parameter 32 T UVM_SET $end
$var parameter 32 U UVM_SETINT $end
$var parameter 32 V UVM_SETOBJ $end
$var parameter 32 W UVM_SETSTR $end
$var parameter 32 X UVM_END_FUNCS $end
$var parameter 32 Y UVM_STR_CRC_POLYNOMIAL $end
$var parameter 32 Z UVM_STDOUT $end
$var parameter 32 [ UVM_LINE_WIDTH $end
$var parameter 32 \ UVM_NUM_LINES $end
$var parameter 32 ] UVM_SMALL_STRING $end
$var parameter 32 ^ UVM_LARGE_STRING $end
$var reg 1 _ uvm_start_uvm_declarations $end
$var integer 32 ` uvm_global_random_seed $end
$var integer 32 a UVM_UNBOUNDED_CONNECTIONS $end

$scope function uvm_hdl_check_path $end
$var integer 32 b uvm_hdl_check_path $end
$upscope $end

$scope function uvm_hdl_deposit $end
$var integer 32 c uvm_hdl_deposit $end
$var reg 1024 d value [1023:0] $end
$upscope $end

$scope function uvm_hdl_force $end
$var integer 32 e uvm_hdl_force $end
$var reg 1024 f value [1023:0] $end
$upscope $end

$scope task uvm_hdl_force_time $end
$var reg 1024 g value [1023:0] $end
$var time 64 h force_time $end
$upscope $end

$scope function uvm_hdl_release_and_read $end
$var integer 32 i uvm_hdl_release_and_read $end
$var reg 1024 j value [1023:0] $end
$upscope $end

$scope function uvm_hdl_release $end
$var integer 32 k uvm_hdl_release $end
$upscope $end

$scope function uvm_hdl_read $end
$var integer 32 l uvm_hdl_read $end
$var reg 1024 m value [1023:0] $end
$upscope $end

$scope function uvm_dpi_get_next_arg_c $end
$upscope $end

$scope function uvm_dpi_get_tool_name_c $end
$upscope $end

$scope function uvm_dpi_get_tool_version_c $end
$upscope $end

$scope function uvm_dpi_get_next_arg $end
$upscope $end

$scope function uvm_dpi_get_tool_name $end
$upscope $end

$scope function uvm_dpi_get_tool_version $end
$upscope $end

$scope function uvm_dpi_regcomp $end
$upscope $end

$scope function uvm_dpi_regexec $end
$var integer 32 n uvm_dpi_regexec $end
$upscope $end

$scope function uvm_dpi_regfree $end
$upscope $end

$scope function uvm_re_match $end
$var integer 32 o uvm_re_match $end
$upscope $end

$scope function uvm_dump_re_cache $end
$upscope $end

$scope function uvm_glob_to_re $end
$upscope $end

$scope function uvm_revision_string $end
$upscope $end

$scope function uvm_radix_to_string $end
$var integer 32 p radix $end
$upscope $end

$scope function uvm_instance_scope $end
$var reg 8 q c [7:0] $end
$var integer 32 r pos $end
$upscope $end

$scope function uvm_oneway_hash $end
$var integer 32 s uvm_oneway_hash $end
$var integer 32 t seed $end
$var reg 1 u msb $end
$var reg 8 v current_byte [7:0] $end
$var reg 32 w crc1 [31:0] $end
$upscope $end

$scope function uvm_create_random_seed $end
$var integer 32 x uvm_create_random_seed $end
$upscope $end

$scope function uvm_object_value_str $end
$upscope $end

$scope function uvm_leaf_scope $end
$var reg 8 y scope_separator [7:0] $end
$var reg 8 z bracket_match [7:0] $end
$var integer 32 { pos $end
$var integer 32 | bmatches $end
$upscope $end

$scope function uvm_vector_to_string $end
$var reg 4096 } value [4095:0] $end
$var integer 32 ~ size $end
$var integer 32 !! radix $end
$upscope $end

$scope function uvm_get_array_index_int $end
$var integer 32 "! uvm_get_array_index_int $end
$var reg 1 #! is_wildcard $end
$var integer 32 $! i $end
$upscope $end

$scope function uvm_get_array_index_string $end
$var reg 1 %! is_wildcard $end
$var integer 32 &! i $end
$upscope $end

$scope function uvm_is_array $end
$var reg 1 '! uvm_is_array $end
$upscope $end

$scope function uvm_has_wildcard $end
$upscope $end

$scope task run_test $end
$upscope $end

$scope function global_stop_request $end
$upscope $end

$scope function set_global_timeout $end
$var time 64 (! timeout $end
$var reg 1 )! overridable $end
$upscope $end

$scope function set_global_stop_timeout $end
$var time 64 *! timeout $end
$upscope $end

$scope function uvm_report_enabled $end
$var reg 1 +! uvm_report_enabled $end
$var integer 32 ,! verbosity $end
$var reg 2 -! severity [1:0] $end
$upscope $end

$scope function uvm_report $end
$var reg 2 .! severity [1:0] $end
$var integer 32 /! verbosity $end
$var integer 32 0! line $end
$upscope $end

$scope function uvm_report_info $end
$var integer 32 1! verbosity $end
$var integer 32 2! line $end
$upscope $end

$scope function uvm_report_warning $end
$var integer 32 3! verbosity $end
$var integer 32 4! line $end
$upscope $end

$scope function uvm_report_error $end
$var integer 32 5! verbosity $end
$var integer 32 6! line $end
$upscope $end

$scope function uvm_report_fatal $end
$var integer 32 7! verbosity $end
$var integer 32 8! line $end
$upscope $end

$scope function uvm_string_to_severity $end
$var reg 1 9! uvm_string_to_severity $end
$var reg 2 :! sev [1:0] $end
$upscope $end

$scope function uvm_string_to_action $end
$upscope $end

$scope function set_config_int $end
$var reg 4096 ;! value [4095:0] $end
$upscope $end

$scope function set_config_object $end
$var reg 1 <! clone $end
$upscope $end

$scope function set_config_string $end
$upscope $end

$scope function uvm_is_match $end
$var reg 1 =! uvm_is_match $end
$upscope $end

$scope function uvm_string_to_bits $end
$var reg 115200 >! uvm_string_to_bits [115199:0] $end
$upscope $end

$scope function uvm_bits_to_string $end
$var reg 115200 ?! str [115199:0] $end
$upscope $end

$scope task uvm_wait_for_nba_region $end
$var integer 32 @! nba $end
$var integer 32 A! next_nba $end
$upscope $end

$scope function uvm_split_string $end
$upscope $end

$scope function uvm_hdl_concat2string $end
$upscope $end
$upscope $end

$scope begin testbench_sv_unit $end
$upscope $end

$scope begin std $end
$upscope $end

$scope begin questa_uvm_pkg $end
